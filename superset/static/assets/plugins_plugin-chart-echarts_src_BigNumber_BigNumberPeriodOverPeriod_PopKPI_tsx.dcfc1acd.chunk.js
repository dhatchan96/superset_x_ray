"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunksuperset"] = globalThis["webpackChunksuperset"] || []).push([["plugins_plugin-chart-echarts_src_BigNumber_BigNumberPeriodOverPeriod_PopKPI_tsx"],{

/***/ "./packages/superset-ui-core/src/time-comparison/customTimeRangeDecode.ts":
/*!********************************************************************************!*\
  !*** ./packages/superset-ui-core/src/time-comparison/customTimeRangeDecode.ts ***!
  \********************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customTimeRangeDecode: () => (/* binding */ customTimeRangeDecode)\n/* harmony export */ });\n/* unused harmony export ISO8601_AND_CONSTANT */\n/* harmony import */ var _fetchTimeRange__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fetchTimeRange */ \"./packages/superset-ui-core/src/time-comparison/fetchTimeRange.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\nconst iso8601 = String.raw`\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.\\d+)?(?:(?:[+-]\\d\\d:\\d\\d)|Z)?`;\nconst datetimeConstant = String.raw`(?:TODAY|NOW)`;\nconst grainValue = String.raw`[+-]?[1-9][0-9]*`;\nconst grain = String.raw`YEAR|QUARTER|MONTH|WEEK|DAY|HOUR|MINUTE|SECOND`;\nconst CUSTOM_RANGE_EXPRESSION = RegExp(String.raw`^DATEADD\\(DATETIME\\(\"(${iso8601}|${datetimeConstant})\"\\),\\s(${grainValue}),\\s(${grain})\\)$`, 'i');\nconst ISO8601_AND_CONSTANT = RegExp(String.raw`^${iso8601}$|^${datetimeConstant}$`, 'i');\nconst DATETIME_CONSTANT = ['now', 'today'];\nconst SEVEN_DAYS_AGO = new Date();\nSEVEN_DAYS_AGO.setHours(0, 0, 0, 0);\nconst MIDNIGHT = new Date();\nMIDNIGHT.setHours(0, 0, 0, 0);\nconst defaultCustomRange = {\n  sinceDatetime: SEVEN_DAYS_AGO.setDate(SEVEN_DAYS_AGO.getDate() - 7).toString(),\n  sinceMode: 'relative',\n  sinceGrain: 'day',\n  sinceGrainValue: -7,\n  untilDatetime: MIDNIGHT.toString(),\n  untilMode: 'specific',\n  untilGrain: 'day',\n  untilGrainValue: 7,\n  anchorMode: 'now',\n  anchorValue: 'now'\n};\nconst customTimeRangeDecode = (timeRange) => {\n  const splitDateRange = timeRange.split(_fetchTimeRange__WEBPACK_IMPORTED_MODULE_0__.SEPARATOR);\n  if (splitDateRange.length === 2) {\n    const [since, until] = splitDateRange;\n    // specific : specific\n    if (ISO8601_AND_CONSTANT.test(since) && ISO8601_AND_CONSTANT.test(until)) {\n      const sinceMode = DATETIME_CONSTANT.includes(since) ? since : 'specific';\n      const untilMode = DATETIME_CONSTANT.includes(until) ? until : 'specific';\n      return {\n        customRange: {\n          ...defaultCustomRange,\n          sinceDatetime: since,\n          untilDatetime: until,\n          sinceMode,\n          untilMode\n        },\n        matchedFlag: true\n      };\n    }\n    // relative : specific\n    const sinceCapturedGroup = since.match(CUSTOM_RANGE_EXPRESSION);\n    if (sinceCapturedGroup &&\n    ISO8601_AND_CONSTANT.test(until) &&\n    since.includes(until)) {\n      const [dttm, grainValue, grain] = sinceCapturedGroup.slice(1);\n      const untilMode = DATETIME_CONSTANT.includes(until) ? until : 'specific';\n      return {\n        customRange: {\n          ...defaultCustomRange,\n          sinceGrain: grain,\n          sinceGrainValue: parseInt(grainValue, 10),\n          sinceDatetime: dttm,\n          untilDatetime: dttm,\n          sinceMode: 'relative',\n          untilMode\n        },\n        matchedFlag: true\n      };\n    }\n    // specific : relative\n    const untilCapturedGroup = until.match(CUSTOM_RANGE_EXPRESSION);\n    if (ISO8601_AND_CONSTANT.test(since) &&\n    untilCapturedGroup &&\n    until.includes(since)) {\n      const [dttm, grainValue, grain] = [...untilCapturedGroup.slice(1)];\n      const sinceMode = DATETIME_CONSTANT.includes(since) ? since : 'specific';\n      return {\n        customRange: {\n          ...defaultCustomRange,\n          untilGrain: grain,\n          untilGrainValue: parseInt(grainValue, 10),\n          sinceDatetime: dttm,\n          untilDatetime: dttm,\n          untilMode: 'relative',\n          sinceMode\n        },\n        matchedFlag: true\n      };\n    }\n    // relative : relative\n    if (sinceCapturedGroup && untilCapturedGroup) {\n      const [sinceDttm, sinceGrainValue, sinceGrain] = [\n      ...sinceCapturedGroup.slice(1)];\n\n      const [untilDttm, untilGrainValue, untilGrain] = [\n      ...untilCapturedGroup.slice(1)];\n\n      if (sinceDttm === untilDttm) {\n        return {\n          customRange: {\n            ...defaultCustomRange,\n            sinceGrain: sinceGrain,\n            sinceGrainValue: parseInt(sinceGrainValue, 10),\n            sinceDatetime: sinceDttm,\n            untilGrain: untilGrain,\n            untilGrainValue: parseInt(untilGrainValue, 10),\n            untilDatetime: untilDttm,\n            anchorValue: sinceDttm,\n            sinceMode: 'relative',\n            untilMode: 'relative',\n            anchorMode: sinceDttm === 'now' ? 'now' : 'specific'\n          },\n          matchedFlag: true\n        };\n      }\n    }\n  }\n  return {\n    customRange: defaultCustomRange,\n    matchedFlag: false\n  };\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(iso8601, \"iso8601\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(datetimeConstant, \"datetimeConstant\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(grainValue, \"grainValue\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(grain, \"grain\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(CUSTOM_RANGE_EXPRESSION, \"CUSTOM_RANGE_EXPRESSION\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(ISO8601_AND_CONSTANT, \"ISO8601_AND_CONSTANT\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(DATETIME_CONSTANT, \"DATETIME_CONSTANT\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(SEVEN_DAYS_AGO, \"SEVEN_DAYS_AGO\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(MIDNIGHT, \"MIDNIGHT\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(defaultCustomRange, \"defaultCustomRange\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");reactHotLoader.register(customTimeRangeDecode, \"customTimeRangeDecode\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\customTimeRangeDecode.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/superset-ui-core/src/time-comparison/customTimeRangeDecode.ts\n");

/***/ }),

/***/ "./packages/superset-ui-core/src/time-comparison/fetchTimeRange.ts":
/*!*************************************************************************!*\
  !*** ./packages/superset-ui-core/src/time-comparison/fetchTimeRange.ts ***!
  \*************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SEPARATOR: () => (/* binding */ SEPARATOR),\n/* harmony export */   fetchTimeRange: () => (/* binding */ fetchTimeRange)\n/* harmony export */ });\n/* unused harmony exports buildTimeRangeString, formatTimeRange, formatTimeRangeComparison */\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isEmpty */ \"./node_modules/lodash/isEmpty.js\");\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/utils/ensureIsArray.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/query/getClientErrorObject.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\nconst SEPARATOR = ' : ';\nconst buildTimeRangeString = (since, until) => `${since}${SEPARATOR}${until}`;\nconst formatDateEndpoint = (dttm, isStart) => dttm.replace('T00:00:00', '') || (isStart ? '-∞' : '∞');\nconst formatTimeRange = (timeRange, columnPlaceholder = 'col') => {\n  const splitDateRange = timeRange.split(SEPARATOR);\n  if (splitDateRange.length === 1)\n  return timeRange;\n  return `${formatDateEndpoint(splitDateRange[0], true)} ≤ ${columnPlaceholder} < ${formatDateEndpoint(splitDateRange[1])}`;\n};\nconst formatTimeRangeComparison = (initialTimeRange, shiftedTimeRange, columnPlaceholder = 'col') => {\n  const splitInitialDateRange = initialTimeRange.split(SEPARATOR);\n  const splitShiftedDateRange = shiftedTimeRange.split(SEPARATOR);\n  return `${columnPlaceholder}: ${formatDateEndpoint(splitInitialDateRange[0], true)} to ${formatDateEndpoint(splitInitialDateRange[1])} vs\n  ${formatDateEndpoint(splitShiftedDateRange[0], true)} to ${formatDateEndpoint(splitShiftedDateRange[1])}`;\n};\nconst fetchTimeRange = async (timeRange, columnPlaceholder = 'col', shifts) => {\n  let query;\n  let endpoint;\n  if (!lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default()(shifts)) {\n    const timeRanges = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(shifts).map((shift) => ({\n      timeRange,\n      shift\n    }));\n    query = rison__WEBPACK_IMPORTED_MODULE_1___default().encode_uri([{ timeRange }, ...timeRanges]);\n    endpoint = `/api/v1/time_range/?q=${query}`;\n  } else\n  {\n    query = rison__WEBPACK_IMPORTED_MODULE_1___default().encode_uri(timeRange);\n    endpoint = `/api/v1/time_range/?q=${query}`;\n  }\n  try {var _response$json3;\n    const response = await _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get({ endpoint });\n    if (lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default()(shifts)) {var _response$json, _response$json$result, _response$json2, _response$json2$resul;\n      const timeRangeString = buildTimeRangeString((response == null ? void 0 : (_response$json = response.json) == null ? void 0 : (_response$json$result = _response$json.result[0]) == null ? void 0 : _response$json$result.since) || '', (response == null ? void 0 : (_response$json2 = response.json) == null ? void 0 : (_response$json2$resul = _response$json2.result[0]) == null ? void 0 : _response$json2$resul.until) || '');\n      return {\n        value: formatTimeRange(timeRangeString, columnPlaceholder)\n      };\n    }\n    const timeRanges = response == null ? void 0 : (_response$json3 = response.json) == null ? void 0 : _response$json3.result.map((result) => buildTimeRangeString(result.since, result.until));\n    return {\n      value: timeRanges.\n      slice(1).\n      map((timeRange) => formatTimeRangeComparison(timeRanges[0], timeRange, columnPlaceholder))\n    };\n  }\n  catch (response) {\n    const clientError = await (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_4__.getClientErrorObject)(response);\n    return {\n      error: clientError.message || clientError.error || response.statusText\n    };\n  }\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SEPARATOR, \"SEPARATOR\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\fetchTimeRange.ts\");reactHotLoader.register(buildTimeRangeString, \"buildTimeRangeString\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\fetchTimeRange.ts\");reactHotLoader.register(formatDateEndpoint, \"formatDateEndpoint\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\fetchTimeRange.ts\");reactHotLoader.register(formatTimeRange, \"formatTimeRange\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\fetchTimeRange.ts\");reactHotLoader.register(formatTimeRangeComparison, \"formatTimeRangeComparison\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\fetchTimeRange.ts\");reactHotLoader.register(fetchTimeRange, \"fetchTimeRange\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\fetchTimeRange.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy90aW1lLWNvbXBhcmlzb24vZmV0Y2hUaW1lUmFuZ2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7O0FBRUE7QUFNQTtBQUVBO0FBR0E7QUFHQTtBQUlBO0FBQ0E7QUFBQTtBQUNBO0FBSUE7QUFFQTtBQUtBO0FBQ0E7QUFDQTtBQUlBO0FBR0E7QUFFQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBOztBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy90aW1lLWNvbXBhcmlzb24vZmV0Y2hUaW1lUmFuZ2UudHM/MDFjZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgcmlzb24gZnJvbSAncmlzb24nO1xyXG5pbXBvcnQgeyBpc0VtcHR5IH0gZnJvbSAnbG9kYXNoJztcclxuaW1wb3J0IHtcclxuICBTdXBlcnNldENsaWVudCxcclxuICBnZXRDbGllbnRFcnJvck9iamVjdCxcclxuICBlbnN1cmVJc0FycmF5LFxyXG59IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcclxuXHJcbmV4cG9ydCBjb25zdCBTRVBBUkFUT1IgPSAnIDogJztcclxuXHJcbmV4cG9ydCBjb25zdCBidWlsZFRpbWVSYW5nZVN0cmluZyA9IChzaW5jZTogc3RyaW5nLCB1bnRpbDogc3RyaW5nKTogc3RyaW5nID0+XHJcbiAgYCR7c2luY2V9JHtTRVBBUkFUT1J9JHt1bnRpbH1gO1xyXG5cclxuY29uc3QgZm9ybWF0RGF0ZUVuZHBvaW50ID0gKGR0dG06IHN0cmluZywgaXNTdGFydD86IGJvb2xlYW4pOiBzdHJpbmcgPT5cclxuICBkdHRtLnJlcGxhY2UoJ1QwMDowMDowMCcsICcnKSB8fCAoaXNTdGFydCA/ICct4oieJyA6ICfiiJ4nKTtcclxuXHJcbmV4cG9ydCBjb25zdCBmb3JtYXRUaW1lUmFuZ2UgPSAoXHJcbiAgdGltZVJhbmdlOiBzdHJpbmcsXHJcbiAgY29sdW1uUGxhY2Vob2xkZXIgPSAnY29sJyxcclxuKSA9PiB7XHJcbiAgY29uc3Qgc3BsaXREYXRlUmFuZ2UgPSB0aW1lUmFuZ2Uuc3BsaXQoU0VQQVJBVE9SKTtcclxuICBpZiAoc3BsaXREYXRlUmFuZ2UubGVuZ3RoID09PSAxKSByZXR1cm4gdGltZVJhbmdlO1xyXG4gIHJldHVybiBgJHtmb3JtYXREYXRlRW5kcG9pbnQoXHJcbiAgICBzcGxpdERhdGVSYW5nZVswXSxcclxuICAgIHRydWUsXHJcbiAgKX0g4omkICR7Y29sdW1uUGxhY2Vob2xkZXJ9IDwgJHtmb3JtYXREYXRlRW5kcG9pbnQoc3BsaXREYXRlUmFuZ2VbMV0pfWA7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZm9ybWF0VGltZVJhbmdlQ29tcGFyaXNvbiA9IChcclxuICBpbml0aWFsVGltZVJhbmdlOiBzdHJpbmcsXHJcbiAgc2hpZnRlZFRpbWVSYW5nZTogc3RyaW5nLFxyXG4gIGNvbHVtblBsYWNlaG9sZGVyID0gJ2NvbCcsXHJcbikgPT4ge1xyXG4gIGNvbnN0IHNwbGl0SW5pdGlhbERhdGVSYW5nZSA9IGluaXRpYWxUaW1lUmFuZ2Uuc3BsaXQoU0VQQVJBVE9SKTtcclxuICBjb25zdCBzcGxpdFNoaWZ0ZWREYXRlUmFuZ2UgPSBzaGlmdGVkVGltZVJhbmdlLnNwbGl0KFNFUEFSQVRPUik7XHJcbiAgcmV0dXJuIGAke2NvbHVtblBsYWNlaG9sZGVyfTogJHtmb3JtYXREYXRlRW5kcG9pbnQoXHJcbiAgICBzcGxpdEluaXRpYWxEYXRlUmFuZ2VbMF0sXHJcbiAgICB0cnVlLFxyXG4gICl9IHRvICR7Zm9ybWF0RGF0ZUVuZHBvaW50KHNwbGl0SW5pdGlhbERhdGVSYW5nZVsxXSl9IHZzXHJcbiAgJHtmb3JtYXREYXRlRW5kcG9pbnQoc3BsaXRTaGlmdGVkRGF0ZVJhbmdlWzBdLCB0cnVlKX0gdG8gJHtmb3JtYXREYXRlRW5kcG9pbnQoXHJcbiAgICBzcGxpdFNoaWZ0ZWREYXRlUmFuZ2VbMV0sXHJcbiAgKX1gO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGZldGNoVGltZVJhbmdlID0gYXN5bmMgKFxyXG4gIHRpbWVSYW5nZTogc3RyaW5nLFxyXG4gIGNvbHVtblBsYWNlaG9sZGVyID0gJ2NvbCcsXHJcbiAgc2hpZnRzPzogc3RyaW5nW10sXHJcbikgPT4ge1xyXG4gIGxldCBxdWVyeTtcclxuICBsZXQgZW5kcG9pbnQ7XHJcbiAgaWYgKCFpc0VtcHR5KHNoaWZ0cykpIHtcclxuICAgIGNvbnN0IHRpbWVSYW5nZXMgPSBlbnN1cmVJc0FycmF5KHNoaWZ0cykubWFwKHNoaWZ0ID0+ICh7XHJcbiAgICAgIHRpbWVSYW5nZSxcclxuICAgICAgc2hpZnQsXHJcbiAgICB9KSk7XHJcbiAgICBxdWVyeSA9IHJpc29uLmVuY29kZV91cmkoW3sgdGltZVJhbmdlIH0sIC4uLnRpbWVSYW5nZXNdKTtcclxuICAgIGVuZHBvaW50ID0gYC9hcGkvdjEvdGltZV9yYW5nZS8/cT0ke3F1ZXJ5fWA7XHJcbiAgfSBlbHNlIHtcclxuICAgIHF1ZXJ5ID0gcmlzb24uZW5jb2RlX3VyaSh0aW1lUmFuZ2UpO1xyXG4gICAgZW5kcG9pbnQgPSBgL2FwaS92MS90aW1lX3JhbmdlLz9xPSR7cXVlcnl9YDtcclxuICB9XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgU3VwZXJzZXRDbGllbnQuZ2V0KHsgZW5kcG9pbnQgfSk7XHJcbiAgICBpZiAoaXNFbXB0eShzaGlmdHMpKSB7XHJcbiAgICAgIGNvbnN0IHRpbWVSYW5nZVN0cmluZyA9IGJ1aWxkVGltZVJhbmdlU3RyaW5nKFxyXG4gICAgICAgIHJlc3BvbnNlPy5qc29uPy5yZXN1bHRbMF0/LnNpbmNlIHx8ICcnLFxyXG4gICAgICAgIHJlc3BvbnNlPy5qc29uPy5yZXN1bHRbMF0/LnVudGlsIHx8ICcnLFxyXG4gICAgICApO1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHZhbHVlOiBmb3JtYXRUaW1lUmFuZ2UodGltZVJhbmdlU3RyaW5nLCBjb2x1bW5QbGFjZWhvbGRlciksXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgICBjb25zdCB0aW1lUmFuZ2VzID0gcmVzcG9uc2U/Lmpzb24/LnJlc3VsdC5tYXAoKHJlc3VsdDogYW55KSA9PlxyXG4gICAgICBidWlsZFRpbWVSYW5nZVN0cmluZyhyZXN1bHQuc2luY2UsIHJlc3VsdC51bnRpbCksXHJcbiAgICApO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdmFsdWU6IHRpbWVSYW5nZXNcclxuICAgICAgICAuc2xpY2UoMSlcclxuICAgICAgICAubWFwKCh0aW1lUmFuZ2U6IHN0cmluZykgPT5cclxuICAgICAgICAgIGZvcm1hdFRpbWVSYW5nZUNvbXBhcmlzb24oXHJcbiAgICAgICAgICAgIHRpbWVSYW5nZXNbMF0sXHJcbiAgICAgICAgICAgIHRpbWVSYW5nZSxcclxuICAgICAgICAgICAgY29sdW1uUGxhY2Vob2xkZXIsXHJcbiAgICAgICAgICApLFxyXG4gICAgICAgICksXHJcbiAgICB9O1xyXG4gIH0gY2F0Y2ggKHJlc3BvbnNlKSB7XHJcbiAgICBjb25zdCBjbGllbnRFcnJvciA9IGF3YWl0IGdldENsaWVudEVycm9yT2JqZWN0KHJlc3BvbnNlKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGVycm9yOiBjbGllbnRFcnJvci5tZXNzYWdlIHx8IGNsaWVudEVycm9yLmVycm9yIHx8IHJlc3BvbnNlLnN0YXR1c1RleHQsXHJcbiAgICB9O1xyXG4gIH1cclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/superset-ui-core/src/time-comparison/fetchTimeRange.ts\n");

/***/ }),

/***/ "./packages/superset-ui-core/src/time-comparison/getTimeOffset.ts":
/*!************************************************************************!*\
  !*** ./packages/superset-ui-core/src/time-comparison/getTimeOffset.ts ***!
  \************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeCustomDateTime: () => (/* binding */ computeCustomDateTime),\n/* harmony export */   getTimeOffset: () => (/* binding */ getTimeOffset),\n/* harmony export */   parseDttmToDate: () => (/* binding */ parseDttmToDate)\n/* harmony export */ });\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isEmpty */ \"./node_modules/lodash/isEmpty.js\");\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./packages/superset-ui-core/src/utils/ensureIsArray.ts\");\n/* harmony import */ var _customTimeRangeDecode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./customTimeRangeDecode */ \"./packages/superset-ui-core/src/time-comparison/customTimeRangeDecode.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\n\n\nconst DAY_IN_MS = 24 * 60 * 60 * 1000;\nconst parseDttmToDate = (dttm, isEndDate = false, computingShifts = false) => {\n  const now = new Date();\n  if (dttm === 'now' || dttm === 'No filter' || dttm === '') {\n    return now;\n  }\n  if (dttm === 'today') {\n    now.setHours(0, 0, 0, 0);\n    return now;\n  }\n  if (computingShifts) {\n    now.setHours(-now.getTimezoneOffset() / 60, 0, 0, 0);\n  } else\n  {\n    now.setHours(0, 0, 0, 0);\n  }\n  if (isEndDate && dttm != null && dttm.includes('Last')) {\n    return now;\n  }\n  switch (dttm) {\n    case 'Last day':\n      now.setUTCDate(now.getUTCDate() - 1);\n      return now;\n    case 'Last week':\n      now.setUTCDate(now.getUTCDate() - 7);\n      return now;\n    case 'Last month':\n      now.setUTCMonth(now.getUTCMonth() - 1);\n      return now;\n    case 'Last quarter':\n      now.setUTCMonth(now.getUTCMonth() - 3);\n      return now;\n    case 'Last year':\n      now.setUTCFullYear(now.getUTCFullYear() - 1);\n      return now;\n    case 'previous calendar week':\n      if (isEndDate) {\n        now.setDate(now.getDate() - now.getDay() + 1); // end date is the last day of the previous week (Sunday)\n      } else\n      {\n        now.setDate(now.getDate() - now.getDay() - 6); // start date is the first day of the previous week (Monday)\n      }\n      return now;\n    case 'previous calendar month':\n      if (isEndDate) {\n        now.setDate(1); // end date is the last day of the previous month\n      } else\n      {\n        now.setDate(1); // start date is the first day of the previous month\n        now.setMonth(now.getMonth() - 1);\n      }\n      return now;\n    case 'previous calendar year':\n      if (isEndDate) {\n        now.setFullYear(now.getFullYear(), 0, 1); // end date is the last day of the previous year\n      } else\n      {\n        now.setFullYear(now.getFullYear() - 1, 0, 1); // start date is the first day of the previous year\n      }\n      return now;\n    default:\n      break;\n  }\n  if (dttm != null && dttm.includes('ago')) {\n    const parts = dttm.split(' ');\n    const amount = parseInt(parts[0], 10);\n    const unit = parts[1];\n    switch (unit) {\n      case 'day':\n      case 'days':\n        now.setUTCDate(now.getUTCDate() - amount);\n        break;\n      case 'week':\n      case 'weeks':\n        now.setUTCDate(now.getUTCDate() - amount * 7);\n        break;\n      case 'month':\n      case 'months':\n        now.setUTCMonth(now.getUTCMonth() - amount);\n        break;\n      case 'year':\n      case 'years':\n        now.setUTCFullYear(now.getUTCFullYear() - amount);\n        break;\n      default:\n        break;\n    }\n    return now;\n  }\n  const parts = dttm == null ? void 0 : dttm.split('-');\n  let parsed = null;\n  if (parts && !lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default()(parts)) {\n    if (parts.length === 1) {\n      parsed = new Date(Date.UTC(parseInt(parts[0], 10), 0));\n    } else\n    if (parts.length === 2) {\n      parsed = new Date(Date.UTC(parseInt(parts[0], 10), parseInt(parts[1], 10) - 1));\n    } else\n    if (parts.length === 3) {\n      parsed = new Date(parseInt(parts[0], 10), parseInt(parts[1], 10) - 1, parseInt(parts[2], 10));\n    } else\n    {\n      parsed = new Date(dttm);\n    }\n  } else\n  {\n    parsed = new Date(dttm);\n  }\n  if (parsed && !Number.isNaN(parsed.getTime())) {\n    if (computingShifts) {\n      parsed.setHours(-parsed.getTimezoneOffset() / 60, 0, 0, 0);\n    } else\n    {\n      parsed.setHours(0, 0, 0, 0);\n    }\n    return parsed;\n  }\n  // Return null if the string cannot be parsed into a date\n  return null;\n};\nconst computeCustomDateTime = (dttm, grain, grainValue) => {\n  let parsed;\n  if (dttm === 'now' || dttm === 'today') {\n    parsed = new Date();\n  } else\n  {\n    parsed = new Date(dttm);\n  }\n  if (!Number.isNaN(parsed.getTime())) {\n    switch (grain) {\n      case 'second':\n        parsed.setSeconds(parsed.getSeconds() + grainValue);\n        break;\n      case 'minute':\n        parsed.setMinutes(parsed.getMinutes() + grainValue);\n        break;\n      case 'hour':\n        parsed.setHours(parsed.getHours() + grainValue);\n        break;\n      case 'day':\n        parsed.setDate(parsed.getDate() + grainValue);\n        break;\n      case 'week':\n        parsed.setDate(parsed.getDate() + grainValue * 7);\n        break;\n      case 'month':\n        parsed.setMonth(parsed.getMonth() + grainValue);\n        break;\n      case 'quarter':\n        parsed.setMonth(parsed.getMonth() + grainValue * 3);\n        break;\n      case 'year':\n        parsed.setFullYear(parsed.getFullYear() + grainValue);\n        break;\n      default:\n        break;\n    }\n    return parsed;\n  }\n  return null;\n};\nconst getTimeOffset = ({ timeRangeFilter, shifts, startDate, includeFutureOffsets = true }) => {var _timeRangeFilter$comp, _timeRangeFilter$comp2, _ref, _customStartDate2, _ref2, _customEndDate2;\n  const { customRange, matchedFlag } = (0,_customTimeRangeDecode__WEBPACK_IMPORTED_MODULE_1__.customTimeRangeDecode)((_timeRangeFilter$comp = timeRangeFilter == null ? void 0 : timeRangeFilter.comparator) != null ? _timeRangeFilter$comp : '');\n  let customStartDate = null;\n  let customEndDate = null;\n  if (matchedFlag) {var _customStartDate, _customEndDate;\n    // Compute the start date and end date using the custom range information\n    const { sinceDatetime, sinceMode, sinceGrain, sinceGrainValue, untilDatetime, untilMode, untilGrain, untilGrainValue } = { ...customRange };\n    if (sinceMode !== 'relative') {\n      if (sinceMode === 'specific') {\n        customStartDate = new Date(sinceDatetime);\n      } else\n      {\n        customStartDate = parseDttmToDate(sinceDatetime, false, true);\n      }\n    } else\n    {\n      customStartDate = computeCustomDateTime(sinceDatetime, sinceGrain, sinceGrainValue);\n    }\n    (_customStartDate = customStartDate) == null ? void 0 : _customStartDate.setHours(0, 0, 0, 0);\n    if (untilMode !== 'relative') {\n      if (untilMode === 'specific') {\n        customEndDate = new Date(untilDatetime);\n      } else\n      {\n        customEndDate = parseDttmToDate(untilDatetime, false, true);\n      }\n    } else\n    {\n      customEndDate = computeCustomDateTime(untilDatetime, untilGrain, untilGrainValue);\n    }\n    (_customEndDate = customEndDate) == null ? void 0 : _customEndDate.setHours(0, 0, 0, 0);\n  }\n  const isCustom = shifts == null ? void 0 : shifts.includes('custom');\n  const isInherit = shifts == null ? void 0 : shifts.includes('inherit');\n  let customStartDateTime;\n  if (isCustom) {\n    if (matchedFlag) {\n      customStartDateTime = new Date(new Date(startDate).setUTCHours(new Date(startDate).getTimezoneOffset() / 60, 0, 0, 0)).getTime();\n    } else\n    {var _parseDttmToDate;\n      customStartDateTime = (_parseDttmToDate = parseDttmToDate(startDate)) == null ? void 0 : _parseDttmToDate.getTime();\n    }\n  }\n  const [startStr, endStr] = ((_timeRangeFilter$comp2 = timeRangeFilter == null ? void 0 : timeRangeFilter.comparator) != null ? _timeRangeFilter$comp2 : '').\n  split(' : ').\n  map((date) => date.trim());\n  const filterStartDateTime = ((_ref = (_customStartDate2 = customStartDate) != null ? _customStartDate2 : parseDttmToDate(startStr, false, false)) == null ? void 0 : _ref.getTime()) ||\n  0;\n  const filterEndDateTime = ((_ref2 = (_customEndDate2 = customEndDate) != null ? _customEndDate2 : parseDttmToDate(endStr || startStr, true, false)) == null ? void 0 : _ref2.getTime()) || 0;\n  const customShift = customStartDateTime &&\n  filterStartDateTime &&\n  Math.round((filterStartDateTime - customStartDateTime) / DAY_IN_MS);\n  const inInheritShift = isInherit &&\n  filterEndDateTime &&\n  filterStartDateTime &&\n  Math.round((filterEndDateTime - filterStartDateTime) / DAY_IN_MS);\n  const newShifts = (0,_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(shifts).\n  map((shift) => {\n    if (shift === 'custom') {\n      if (customShift !== undefined && !Number.isNaN(customShift)) {\n        if (includeFutureOffsets && customShift < 0) {\n          return `${customShift * -1} days after`;\n        }\n        if (customShift >= 0 && filterStartDateTime) {\n          return `${customShift} days ago`;\n        }\n      }\n    }\n    if (shift === 'inherit') {\n      if (inInheritShift && !Number.isNaN(inInheritShift)) {\n        if (includeFutureOffsets && inInheritShift < 0) {\n          return `${inInheritShift * -1} days after`;\n        }\n        if (inInheritShift > 0) {\n          return `${inInheritShift} days ago`;\n        }\n      }\n    }\n    return shift;\n  }).\n  filter((shift) => shift !== 'custom' && shift !== 'inherit');\n  return (0,_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(newShifts);\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DAY_IN_MS, \"DAY_IN_MS\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\getTimeOffset.ts\");reactHotLoader.register(parseDttmToDate, \"parseDttmToDate\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\getTimeOffset.ts\");reactHotLoader.register(computeCustomDateTime, \"computeCustomDateTime\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\getTimeOffset.ts\");reactHotLoader.register(getTimeOffset, \"getTimeOffset\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\time-comparison\\\\getTimeOffset.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/superset-ui-core/src/time-comparison/getTimeOffset.ts\n");

/***/ }),

/***/ "./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/PopKPI.tsx":
/*!*****************************************************************************************!*\
  !*** ./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/PopKPI.tsx ***!
  \*****************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PopKPI)\n/* harmony export */ });\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isEmpty */ \"./node_modules/lodash/isEmpty.js\");\n/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/time-comparison/fetchTimeRange.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/time-comparison/getTimeOffset.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/utils/ensureIsArray.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @superset-ui/core */ \"./node_modules/@emotion/react/dist/emotion-react.browser.development.esm.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _superset_ui_chart_controls__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @superset-ui/chart-controls */ \"./packages/superset-ui-chart-controls/src/constants.ts\");\n/* harmony import */ var _superset_ui_chart_controls__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @superset-ui/chart-controls */ \"./packages/superset-ui-chart-controls/src/components/Tooltip.tsx\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./types */ \"./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/types.ts\");\n/* harmony import */ var _useOverflowDetection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./useOverflowDetection */ \"./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/useOverflowDetection.ts\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\n\nconst NumbersContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__.styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  overflow: auto;\n`;\nconst ComparisonValue = _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__.styled.div`\n  ${({ theme, subheaderFontSize }) => `\n    font-weight: ${theme.typography.weights.light};\n    display: flex;\n    justify-content: center;\n    font-size: ${subheaderFontSize || 20}px;\n    flex: 1 1 0px;\n  `}\n`;\nconst SymbolWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__.styled.span`\n  ${({ theme, backgroundColor, textColor }) => `\n    background-color: ${backgroundColor};\n    color: ${textColor};\n    padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px;\n    border-radius: ${theme.gridUnit * 2}px;\n    margin-right: ${theme.gridUnit}px;\n  `}\n`;\nfunction PopKPI(props) {\n  const { height, width, bigNumber, prevNumber, valueDifference, percentDifferenceFormattedString, headerFontSize, subheaderFontSize, comparisonColorEnabled, comparisonColorScheme, percentDifferenceNumber, currentTimeRangeFilter, startDateOffset, shift, dashboardTimeRange } = props;\n  const [comparisonRange, setComparisonRange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!currentTimeRangeFilter || !shift && !startDateOffset) {\n      setComparisonRange('');\n    } else\n    if (!lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default()(shift) || startDateOffset) {\n      const promise = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.fetchTimeRange)(dashboardTimeRange != null ? dashboardTimeRange : currentTimeRangeFilter.comparator, currentTimeRangeFilter.subject);\n      Promise.resolve(promise).then((res) => {var _res$value;\n        const dates = res == null ? void 0 : (_res$value = res.value) == null ? void 0 : _res$value.match(_superset_ui_chart_controls__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_DATE_PATTERN);\n        const [parsedStartDate, parsedEndDate] = dates != null ? dates : [];\n        const newShift = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.getTimeOffset)({\n          timeRangeFilter: {\n            ...currentTimeRangeFilter,\n            comparator: `${parsedStartDate} : ${parsedEndDate}`\n          },\n          shifts: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(shift),\n          startDate: startDateOffset || ''\n        });\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.fetchTimeRange)(dashboardTimeRange != null ? dashboardTimeRange : currentTimeRangeFilter.comparator, currentTimeRangeFilter.subject, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(newShift)).then((res) => {\n          const response = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(res.value);\n          const firstRange = response.flat()[0];\n          const rangeText = firstRange.split('vs\\n');\n          setComparisonRange(rangeText.length > 1 ? rangeText[1].trim() : rangeText[0]);\n        });\n      });\n    }\n  }, [currentTimeRangeFilter, shift, startDateOffset, dashboardTimeRange]);\n  const theme = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();\n  const flexGap = theme.gridUnit * 5;\n  const wrapperDivStyles = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.css)`\n    font-family: ${theme.typography.families.sansSerif};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: ${height}px;\n    width: ${width}px;\n    overflow: auto;\n  `;\n  const bigValueContainerStyles = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.css)`\n    font-size: ${headerFontSize || 60}px;\n    font-weight: ${theme.typography.weights.normal};\n    text-align: center;\n    margin-bottom: ${theme.gridUnit * 4}px;\n  `;\n  const getArrowIndicatorColor = () => {\n    if (!comparisonColorEnabled || percentDifferenceNumber === 0) {\n      return theme.colors.grayscale.base;\n    }\n    if (percentDifferenceNumber > 0) {\n      // Positive difference\n      return comparisonColorScheme === _types__WEBPACK_IMPORTED_MODULE_8__.ColorSchemeEnum.Green ?\n      theme.colors.success.base :\n      theme.colors.error.base;\n    }\n    // Negative difference\n    return comparisonColorScheme === _types__WEBPACK_IMPORTED_MODULE_8__.ColorSchemeEnum.Red ?\n    theme.colors.success.base :\n    theme.colors.error.base;\n  };\n  const arrowIndicatorStyle = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.css)`\n    color: ${getArrowIndicatorColor()};\n    margin-left: ${theme.gridUnit}px;\n  `;\n  const defaultBackgroundColor = theme.colors.grayscale.light4;\n  const defaultTextColor = theme.colors.grayscale.base;\n  const { backgroundColor, textColor } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    let bgColor = defaultBackgroundColor;\n    let txtColor = defaultTextColor;\n    if (comparisonColorEnabled && percentDifferenceNumber !== 0) {\n      const useSuccess = percentDifferenceNumber > 0 &&\n      comparisonColorScheme === _types__WEBPACK_IMPORTED_MODULE_8__.ColorSchemeEnum.Green ||\n      percentDifferenceNumber < 0 &&\n      comparisonColorScheme === _types__WEBPACK_IMPORTED_MODULE_8__.ColorSchemeEnum.Red;\n      // Set background and text colors based on the conditions\n      bgColor = useSuccess ?\n      theme.colors.success.light2 :\n      theme.colors.error.light2;\n      txtColor = useSuccess ?\n      theme.colors.success.base :\n      theme.colors.error.base;\n    }\n    return {\n      backgroundColor: bgColor,\n      textColor: txtColor\n    };\n  }, [\n  theme,\n  comparisonColorScheme,\n  comparisonColorEnabled,\n  percentDifferenceNumber]\n  );\n  const SYMBOLS_WITH_VALUES = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => [\n  {\n    symbol: '#',\n    value: prevNumber,\n    tooltipText: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_9__.t)('Data for %s', comparisonRange || 'previous range')\n  },\n  {\n    symbol: '△',\n    value: valueDifference,\n    tooltipText: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_9__.t)('Value difference between the time periods')\n  },\n  {\n    symbol: '%',\n    value: percentDifferenceFormattedString,\n    tooltipText: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_9__.t)('Percentage difference between the time periods')\n  }],\n  [\n  comparisonRange,\n  prevNumber,\n  valueDifference,\n  percentDifferenceFormattedString]\n  );\n  const { isOverflowing, symbolContainerRef, wrapperRef } = (0,_useOverflowDetection__WEBPACK_IMPORTED_MODULE_10__.useOverflowDetection)(flexGap);\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(\"div\", { css: wrapperDivStyles, ref: wrapperRef, children:\n    (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)(NumbersContainer, { css: isOverflowing &&\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.css)`\n            width: fit-content;\n            margin: auto;\n            align-items: flex-start;\n          `, children: [\n      (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)(\"div\", { css: bigValueContainerStyles, children: [\n        bigNumber,\n        percentDifferenceNumber !== 0 && (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(\"span\", { css: arrowIndicatorStyle, children:\n          percentDifferenceNumber > 0 ? '↑' : '↓' }\n        )] }\n      ),\n\n      (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(\"div\", { css: [\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.css)`\n              display: flex;\n              justify-content: space-around;\n              gap: ${flexGap}px;\n              min-width: 0;\n              flex-shrink: 1;\n            `,\n        isOverflowing ?\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.css)`\n                  flex-direction: column;\n                  align-items: flex-start;\n                  width: fit-content;\n                ` :\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.css)`\n                  align-items: center;\n                  width: 100%;\n                `,  false ? 0 : \";label:PopKPI;\",  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n        ref: symbolContainerRef, children:\n        SYMBOLS_WITH_VALUES.map((symbol_with_value, index) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(ComparisonValue, { subheaderFontSize: subheaderFontSize, children:\n          (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)(_superset_ui_chart_controls__WEBPACK_IMPORTED_MODULE_12__.Tooltip, { id: \"tooltip\", placement: \"top\", title: symbol_with_value.tooltipText, children: [\n            (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(SymbolWrapper, { backgroundColor: index > 0 ? backgroundColor : defaultBackgroundColor, textColor: index > 0 ? textColor : defaultTextColor, children:\n              symbol_with_value.symbol }\n            ),\n            symbol_with_value.value] }\n          ) }, `comparison-symbol-${symbol_with_value.symbol}`\n        )) }\n      )] }\n    ) }\n  );\n}__signature__(PopKPI, \"useState{[comparisonRange, setComparisonRange]('')}\\nuseEffect{}\\nuseTheme{theme}\\nuseMemo{{ backgroundColor, textColor }}\\nuseMemo{SYMBOLS_WITH_VALUES}\\nuseOverflowDetection{{ isOverflowing, symbolContainerRef, wrapperRef }}\", () => [_superset_ui_core__WEBPACK_IMPORTED_MODULE_2__.useTheme, _useOverflowDetection__WEBPACK_IMPORTED_MODULE_10__.useOverflowDetection]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NumbersContainer, \"NumbersContainer\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\plugins\\\\plugin-chart-echarts\\\\src\\\\BigNumber\\\\BigNumberPeriodOverPeriod\\\\PopKPI.tsx\");reactHotLoader.register(ComparisonValue, \"ComparisonValue\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\plugins\\\\plugin-chart-echarts\\\\src\\\\BigNumber\\\\BigNumberPeriodOverPeriod\\\\PopKPI.tsx\");reactHotLoader.register(SymbolWrapper, \"SymbolWrapper\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\plugins\\\\plugin-chart-echarts\\\\src\\\\BigNumber\\\\BigNumberPeriodOverPeriod\\\\PopKPI.tsx\");reactHotLoader.register(PopKPI, \"PopKPI\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\plugins\\\\plugin-chart-echarts\\\\src\\\\BigNumber\\\\BigNumberPeriodOverPeriod\\\\PopKPI.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/PopKPI.tsx\n");

/***/ }),

/***/ "./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/useOverflowDetection.ts":
/*!******************************************************************************************************!*\
  !*** ./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/useOverflowDetection.ts ***!
  \******************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useOverflowDetection: () => (/* binding */ useOverflowDetection)\n/* harmony export */ });\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/debounce */ \"./node_modules/lodash/debounce.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\nconst useOverflowDetection = (flexGap) => {\n  const symbolContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const [isOverflowing, setIsOverflowing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    let obs;\n    const symbolContainerElem = symbolContainerRef.current;\n    const wrapperElem = wrapperRef.current;\n    if (symbolContainerElem && wrapperElem) {\n      const symbolContainerChildrenElems = Array.from(symbolContainerElem.children);\n      obs = new ResizeObserver(lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(() => {\n        const totalChildrenWidth = symbolContainerChildrenElems.reduce((acc, element) => {var _element$firstElement, _element$firstElement2;return (\n            // take symbol container's child's scroll width to account for the container growing with display: flex\n            acc + ((_element$firstElement = (_element$firstElement2 = element.firstElementChild) == null ? void 0 : _element$firstElement2.scrollWidth) != null ? _element$firstElement : 0));}, 0);\n        if (totalChildrenWidth +\n        flexGap * Math.max(symbolContainerChildrenElems.length - 1, 0) >\n        wrapperElem.clientWidth) {\n          setIsOverflowing(true);\n        } else\n        {\n          setIsOverflowing(false);\n        }\n      }, 500));\n      obs.observe(document.body);\n      symbolContainerChildrenElems.forEach((elem) => {\n        obs.observe(elem);\n      });\n    }\n    return () => {var _obs;return (_obs = obs) == null ? void 0 : _obs.disconnect();};\n  }, [flexGap]);\n  return { isOverflowing, symbolContainerRef, wrapperRef };\n};__signature__(useOverflowDetection, \"useRef{symbolContainerRef}\\nuseRef{wrapperRef}\\nuseState{[isOverflowing, setIsOverflowing](false)}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useOverflowDetection, \"useOverflowDetection\", \"D:\\\\CodeKata\\\\superset\\\\superset-frontend\\\\plugins\\\\plugin-chart-echarts\\\\src\\\\BigNumber\\\\BigNumberPeriodOverPeriod\\\\useOverflowDetection.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL3BsdWdpbi1jaGFydC1lY2hhcnRzL3NyYy9CaWdOdW1iZXIvQmlnTnVtYmVyUGVyaW9kT3ZlclBlcmlvZC91c2VPdmVyZmxvd0RldGVjdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBRUE7QUFFQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vcGx1Z2lucy9wbHVnaW4tY2hhcnQtZWNoYXJ0cy9zcmMvQmlnTnVtYmVyL0JpZ051bWJlclBlcmlvZE92ZXJQZXJpb2QvdXNlT3ZlcmZsb3dEZXRlY3Rpb24udHM/MjQwMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGRlYm91bmNlIH0gZnJvbSAnbG9kYXNoJztcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VPdmVyZmxvd0RldGVjdGlvbiA9IChmbGV4R2FwOiBudW1iZXIpID0+IHtcclxuICBjb25zdCBzeW1ib2xDb250YWluZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xyXG4gIGNvbnN0IHdyYXBwZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xyXG4gIGNvbnN0IFtpc092ZXJmbG93aW5nLCBzZXRJc092ZXJmbG93aW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGxldCBvYnM6IFJlc2l6ZU9ic2VydmVyO1xyXG4gICAgY29uc3Qgc3ltYm9sQ29udGFpbmVyRWxlbSA9IHN5bWJvbENvbnRhaW5lclJlZi5jdXJyZW50O1xyXG4gICAgY29uc3Qgd3JhcHBlckVsZW0gPSB3cmFwcGVyUmVmLmN1cnJlbnQ7XHJcbiAgICBpZiAoc3ltYm9sQ29udGFpbmVyRWxlbSAmJiB3cmFwcGVyRWxlbSkge1xyXG4gICAgICBjb25zdCBzeW1ib2xDb250YWluZXJDaGlsZHJlbkVsZW1zID0gQXJyYXkuZnJvbShcclxuICAgICAgICBzeW1ib2xDb250YWluZXJFbGVtLmNoaWxkcmVuLFxyXG4gICAgICApO1xyXG4gICAgICBvYnMgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoXHJcbiAgICAgICAgZGVib3VuY2UoKCkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgdG90YWxDaGlsZHJlbldpZHRoID0gc3ltYm9sQ29udGFpbmVyQ2hpbGRyZW5FbGVtcy5yZWR1Y2UoXHJcbiAgICAgICAgICAgIChhY2MsIGVsZW1lbnQpID0+XHJcbiAgICAgICAgICAgICAgLy8gdGFrZSBzeW1ib2wgY29udGFpbmVyJ3MgY2hpbGQncyBzY3JvbGwgd2lkdGggdG8gYWNjb3VudCBmb3IgdGhlIGNvbnRhaW5lciBncm93aW5nIHdpdGggZGlzcGxheTogZmxleFxyXG4gICAgICAgICAgICAgIGFjYyArIChlbGVtZW50LmZpcnN0RWxlbWVudENoaWxkPy5zY3JvbGxXaWR0aCA/PyAwKSxcclxuICAgICAgICAgICAgMCxcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIHRvdGFsQ2hpbGRyZW5XaWR0aCArXHJcbiAgICAgICAgICAgICAgZmxleEdhcCAqIE1hdGgubWF4KHN5bWJvbENvbnRhaW5lckNoaWxkcmVuRWxlbXMubGVuZ3RoIC0gMSwgMCkgPlxyXG4gICAgICAgICAgICB3cmFwcGVyRWxlbS5jbGllbnRXaWR0aFxyXG4gICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIHNldElzT3ZlcmZsb3dpbmcodHJ1ZSk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZXRJc092ZXJmbG93aW5nKGZhbHNlKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LCA1MDApLFxyXG4gICAgICApO1xyXG4gICAgICBvYnMub2JzZXJ2ZShkb2N1bWVudC5ib2R5KTtcclxuICAgICAgc3ltYm9sQ29udGFpbmVyQ2hpbGRyZW5FbGVtcy5mb3JFYWNoKGVsZW0gPT4ge1xyXG4gICAgICAgIG9icy5vYnNlcnZlKGVsZW0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHJldHVybiAoKSA9PiBvYnM/LmRpc2Nvbm5lY3QoKTtcclxuICB9LCBbZmxleEdhcF0pO1xyXG5cclxuICByZXR1cm4geyBpc092ZXJmbG93aW5nLCBzeW1ib2xDb250YWluZXJSZWYsIHdyYXBwZXJSZWYgfTtcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/useOverflowDetection.ts\n");

/***/ })

}]);